#include <minix/syslib.h>
#include <minix/drivers.h>
#include <minix/sysutil.h>

// FUNCTIONS
void uart_read(unsigned short base_addr, unsigned short OFFSET, unsigned long *byte);
void uart_write(unsigned short base_addr, unsigned short OFFSET, unsigned long byte);
int uart_subscribe(unsigned long IRQ);
int uart_unsubscribe();

// BIT FUNCTION
#define BIT(n)					(0x01 << n)

// UART DEFINES AND INCLUDES
// UART
#define UART_IRQ_COM1			4			// IRQ LINE FOR SERIAL @ COM1
#define UART_IRQ_COM2			3			// IRQ LINE FOR SERIAL @ COM2

#define UART_COM1_BASE			0x3F8		// COM1 BASE ADDRESS FOR I/O PORTS
#define UART_COM2_BASE			0x2F8		// COM2 BASE ADDRESS FOR I/O PORTS

// UART REGISTERS
#define UART_THR				0x00		// MODE: W   | DLAB: 0 | TRANSMITTER HOLDING BUFFER
#define UART_RBR				0x00		// MODE: R   | DLAB: 0 | RECEIVER BUFFER
#define UART_DLL				0x00		// MODE: R/W | DLAB: 1 | DIVISOR LATCH LOW BYTE
#define UART_DLH				0x01		// MODE: R/W | DLAB: 1 | DIVISOR LATCH HIGH BYTE
#define UART_IER				0x01		// MODE: R/W | DLAB: 0 | INTERRUPT ENABLE REGISTER
#define UART_IIR				0x02		// MODE: R   | DLAB: X | INTERRUPT IDENTIFICATION REGISTER
#define UART_FCR				0x02		// MODE: W   | DLAB: X | FIFO CONTROL REGISTER
#define UART_LCR				0x03		// MODE: R/W | DLAB: X | LINE CONTROL REGISTER
#define UART_MCR				0x04		// MODE: R/W | DLAB: X | MODEM CONTROL REGISTER
#define UART_LSR				0x05		// MODE: R   | DLAB: X | LINE STATUS REGISTER
#define UART_MSR				0x06		// MODE: R   | DLAB: X | MODEM STATUS REGISTER
#define UART_SR					0x07		// MODE: R/W | DLAB: X | SCRATCH REGISTER
// DIVISOR LATCH VALUE = 115200/BAUDRATE
/*
// INTERRUPT ENABLE REGISTER (IER)
#define BIT(0) - ENABLE RECEIVED DATA AVAILABLE INTERRUPT
#define BIT(1) - ENABLE TRANSMITTER HOLDING REGISTER EMPTY INTERRUPT
#define BIT(2) - ENABLE RECEIVER LINE STATUS INTERRUPT
#define BIT(3) - ENABLE MODEM STATUS INTERRUPT
#define BIT(4) - ENABLES SLEEP MODE (16750)
#define BIT(5) - ENABLES LOW POWER MODE (16750)

// INTERRUPT IDENTIFICATION REGISTER (IIR)
#define BIT(0) - INTERRUPT PENDING FLAG
#define BIT(3,2,1) -
#define 0,0,0 - MODEM STATUS INTERRUPT - RESET METHOD: READING MODEM STATUS REGISTER (MSR)
#define 0,0,1 - TRANSMITTER HOLDING REGISTER EMPTY INTERRUPT - RESET METHOD: READING INTERRUPT IDENTIFICATION REGISTER (IIR) || WRITING TO TRANSMIT HOLDING BUFFER (THR)
#define 0,1,0 - RECEIVED DATA AVAILABLE INTERRUPT - RESET METHOD: READING RECEIVE BUFFER REGISTER (RBR)
#define 0,1,1 - RECEIVER LINE STATUS INTERRUPT - RESET METHOD: READING LINE STATUS REGISTER (LSR)
#define 1,1,0 - TIME-OUT INTERRUPT PENDING (16550 & LATER) - RESET METHOD: READING RECEIVE BUFFER REGISTER (RBR)
#define BIT(5) - 64 BYTE FIFO ENABLED (16750 ONLY)
#define BIT(7,6) -
#define 0,0 - NO FIFO ON CHIP
#define 1,0 - FIFO ENABLED, BUT NOT FUNCTIONING
#define 1,1 - FIFO ENABLED

// FIFO CONTROL REGISTER (FCR)
#define BIT(0) - ENABLE FIFOs
#define BIT(1) - CLEAR RECEIVE FIFO
#define BIT(2) - CLEAR TRANSMIT FIFO
#define BIT(3) - DMA MODE SELECT
#define BIT(5) - ENABLE 64 BYTE FIFO (16750)
#define BIT(7,6) -
#define 0,0 - INTERRUPT TRIGGER LEVEL (16 BYTE) - 1 BYTE - TRIGGER LEVEL (64 BYTE) - 1 BYTE
#define 0,1 - INTERRUPT TRIGGER LEVEL (16 BYTE) - 4 BYTE - TRIGGER LEVEL (64 BYTE) - 16 BYTE
#define 1,0 - INTERRUPT TRIGGER LEVEL (16 BYTE) - 8 BYTE - TRIGGER LEVEL (64 BYTE) - 32 BYTE
#define 1,1 - INTERRUPT TRIGGER LEVEL (16 BYTE) - 14 BYTE - TRIGGER LEVEL (64 BYTE) - 56 BYTE

// LINE CONTROL REGISTER (LCR)
#define BIT(1,0) -
#define 0,0 - WORD LENGTH - 5 BITS
#define 0,1 - WORD LENGTH - 6 BITS
#define 1,0 - WORD LENGTH - 7 BITS
#define 1,1 - WORD LENGTH - 8 BITS
#define BIT(2) -
#define 0 - ONE STOP BIT
#define 1 - 1.5 STOP BITS OR 2 STOP BITS
#define BIT(5,4,3) -
#define 0,0,0 - PARITY SELECT - NO PARITY
#define 0,0,1 - PARITY SELECT - ODD PARITY
#define 0,1,1 - PARITY SELECT - EVEN PARITY
#define 1,0,1 - PARITY SELECT - MARK
#define 1,1,1 - PARITY SELECT - SPACE
#define BIT(6) - SET BREAK ENABLE
#define BIT(7) - DIVISOR LATCH ACCESS BIT

// MODEM CONTROL REGISTER (MCR)
#define BIT(0) - DATA TERMINAL READY
#define BIT(1) - REQUEST TO SEND
#define BIT(2) - AUXILIARY OUTPUT 1
#define BIT(3) - AUXILIARY OUTPUT 2
#define BIT(4) - LOOPBACK MODE
#define BIT(5) - AUTOFLOW CONTROL ENABLED (16750)
*/
// LINE STATUS REGISTER (LSR)
#define LSR_DATA_READY 		BIT(0)
#define LSR_OVERRUN_ERR		BIT(1)
#define LSR_PARITY_ERR		BIT(2)
#define LSR_FRAMING_ERR		BIT(3)/*
#define BIT(4) - BREAK INTERRUPT*/
#define LSR_EMPTY_THR		BIT(5)/*
#define BIT(6) - EMPTY DATA HOLDING REGISTER
#define BIT(7) - ERROR IN RECEIVED FIFO

// MODEM STATUS REGISTER (MSR)
#define BIT(0) - DELTA CLEAR TO SEND
#define BIT(1) - DELTA DATA SET READY
#define BIT(2) - TRAILING EDGE RING INDICATOR
#define BIT(3) - DELTA DATA CARRIER DETECT
#define BIT(4) - CLEAR TO SEND
#define BIT(5) - DATA SET READY
#define BIT(6) - RING INDICATOR
#define BIT(7) - CARRIOR DETECT*/

#define DELAY_US 				20000
